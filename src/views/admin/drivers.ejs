<!DOCTYPE html><html><head>
<meta charset="utf-8"/><meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>Admin • Drivers</title>
<style>
:root{
  --bg:#000;--card:#0f0f0f;--text:#fff;--muted:#bbb;--border:#222;
  --warn:#4d1a1a;--warn-border:#a33;
  --accent:#1b3ea4;--danger:#a33;--ok:#00e676
}
*{box-sizing:border-box}
body{margin:0;background:var(--bg);color:var(--text);font-family:system-ui,Segoe UI,Arial,sans-serif}
a{color:#fff}

.layout{display:flex;min-height:100vh}
aside{width:240px;border-right:1px solid var(--border);background:#0a0a0a;padding:16px;position:sticky;top:0;height:100vh}
.brand{display:flex;align-items:center;gap:10px;margin-bottom:16px}
.brand img{width:44px;height:44px;border-radius:50%;border:2px solid #fff}
.brand h1{font-size:16px;margin:0}
nav a{display:block;padding:10px;border-radius:8px;text-decoration:none;color:#fff;border:1px solid transparent}
nav a:hover{background:#101010;border-color:#222}

main{flex:1;padding:20px;display:grid;gap:16px}
.card{background:var(--card);border:1px solid var(--border);border-radius:12px;padding:16px}
h2{margin:0 0 10px;font-size:18px}

.table{width:100%;border-collapse:collapse}
.table th,.table td{padding:10px;border-bottom:1px dashed #222;text-align:left;vertical-align:top}

.filter{margin-bottom:12px;color:#bbb;display:flex;gap:10px;align-items:center;flex-wrap:wrap}
.input{background:#0b0b0b;border:1px solid var(--border);color:#fff;padding:10px 12px;border-radius:8px;min-width:240px}
.btn{background:#111;border:1px solid #333;color:#fff;padding:8px 10px;border-radius:8px;cursor:pointer;text-decoration:none;display:inline-flex;gap:6px;align-items:center}
.btn.small{font-size:12px;padding:6px 8px}
.btn.danger{background:#250b0b;border-color:#661515}
.btn.primary{background:#0b1433;border-color:var(--accent)}
.btn.light{background:#fff;border-color:#fff;color:#000;font-weight:800}
.badge{padding:6px 10px;border-radius:999px;background:#111;border:1px solid #222}
.badge.warn{background:var(--warn);border-color:var(--warn-border);color:#ffb3b3;font-weight:700}
.small{font-size:12px;color:var(--muted)}
.muted{color:var(--muted)}
.kvmini{display:grid;grid-template-columns:auto 1fr;gap:2px 8px;font-size:12px;color:#ddd}
.kvmini .k{color:#aaa}
.pager{display:flex;gap:8px;align-items:center;flex-wrap:wrap;margin-top:10px}
.pager a, .pager span{padding:6px 10px;border-radius:8px;border:1px solid #222;text-decoration:none;color:#fff}
.pager .current{background:#111}

/* ===== limits/override UI ===== */
.limitbox{display:grid;gap:6px}
.limitrow{display:flex;gap:8px;align-items:center;flex-wrap:wrap}
.limitrow .badge{font-size:12px}
.override{border:1px solid #3a3; background:#0a2d0a; color:#bdf3bd}

/* ===== MODALS (hidden by default) ===== */
.modal-backdrop{
  position:fixed;inset:0;display:none;align-items:center;justify-content:center;padding:20px;z-index:999;
  background:rgba(0,0,0,.6);backdrop-filter:blur(2px);
}
.modal{
  width:min(680px,96vw);background:#0f0f0f;border:1px solid var(--border);border-radius:12px;
  box-shadow:0 20px 60px rgba(0,0,0,.5);padding:16px;transform:translateY(6px) scale(.98);opacity:0;
  transition:.18s ease;
}
.modal-backdrop[style*="display: flex"] .modal{transform:translateY(0) scale(1);opacity:1}
.modal h3{margin:0 0 10px}
.modal .row{margin:10px 0;color:#ddd}
.modal .actions{display:flex;gap:10px;justify-content:flex-end;margin-top:12px}
.modal input[type="text"], .modal input[type="email"], .modal textarea, .modal select{
  width:100%;background:#0b0b0b;border:1px solid var(--border);color:#fff;border-radius:8px;padding:10px 12px
}
.modal textarea{min-height:160px;resize:vertical}
.modal .hint{font-size:12px;color:#aaa;margin-top:6px}
</style>
</head><body>
<div class="layout">
  <aside>
    <div class="brand">
      <img src="https://res.cloudinary.com/darf17drw/image/upload/v1752064092/Untitled_design_2_wilxrl.png" alt="">
      <h1>VayaRide Admin</h1>
    </div>
    <nav>
      <a href="/admin">Dashboard</a>
      <a href="/admin/drivers"><b>Drivers</b></a>
      <a href="/admin/riders">Riders</a>
      <a href="/admin/trips">Trips</a>
      <a href="/admin/prebook">Prebook</a>
      <a href="/admin/drivers?status=pending">Pending Drivers</a>
      <a href="/admin/drivers?status=approved">Approved Drivers</a>
      <a href="/admin/drivers?status=rejected">Rejected Drivers</a>
    </nav>
    <form action="/admin/logout" method="POST" style="margin-top:12px">
      <button class="btn" type="submit">Logout</button>
    </form>
  </aside>

  <main>
    <section class="card">
      <div style="display:flex;align-items:center;justify-content:space-between;gap:12px;flex-wrap:wrap">
        <h2>Drivers</h2>
        <div style="display:flex;gap:8px;flex-wrap:wrap">
          <button class="btn primary" id="btn-bulk-email">Email Selected</button>
          <button class="btn light" id="btn-bulk-wa">WhatsApp Selected</button>
          <button class="btn danger" id="btn-bulk-del">Delete Selected</button>
        </div>
      </div>

      <!-- Search + status filter (same route) -->
      <form class="filter" method="GET" action="/admin/drivers" id="searchForm">
        <input class="input" type="text" name="q" id="q"
               placeholder="Search name, email, phone, vehicle, or id…"
               value="<%= (typeof q !== 'undefined' ? q : '') %>" />
        <select class="input" name="status" id="status" style="min-width:160px">
          <option value="">All statuses</option>
          <option value="pending"  <%= status==='pending'  ? 'selected' : '' %>>Pending</option>
          <option value="approved" <%= status==='approved' ? 'selected' : '' %>>Approved</option>
          <option value="rejected" <%= status==='rejected' ? 'selected' : '' %>>Rejected</option>
        </select>
        <input type="hidden" name="page" value="1"/>
        <button class="btn" type="submit">Search</button>
        <% if (pagination) { %>
          <span class="muted">Page <%= pagination.page %> / <%= pagination.totalPages %> • <%= pagination.total %> results</span>
        <% } %>
      </form>

      <table class="table">
        <thead>
          <tr>
            <th><input type="checkbox" id="sel-all"/></th>
            <th>Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Status</th>
            <th>Vehicle</th>
            <th>Trips</th>
            <th>Cash</th>
            <th>Limits</th>
            <th>Banking</th>
            <th>Referrals</th>
            <th>Joined</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          <% if (!drivers || drivers.length === 0) { %>
            <tr><td colspan="13" class="muted">No drivers found.</td></tr>
          <% } %>
          <% (drivers || []).forEach(d => {
               const code = d.referralCode || '';
               const clicks = (d.referralStats && d.referralStats.clicks) || 0;
               const regs   = (d.referralStats && d.referralStats.registrations) || 0;
               const sharedAt = (d.referralStats && d.referralStats.lastSharedAt) ? new Date(d.referralStats.lastSharedAt) : null;
               const joined = new Date(d.createdAt);

               const trips = Number(d?.stats?.totalTrips || 0);
               const cashCount = Number(d?.stats?.cashCount || 0);
               const payfastCount = Number(d?.stats?.payfastCount || 0);

               const cashLimit = Number(d?.cashTripLimit ?? 3);
               const payfastLimit = Number(d?.payfastTripLimit ?? 3);
               const effCash = Math.max(0, cashCount - Number(d?.cashTripOffset || 0));
               const effPay  = Math.max(0, payfastCount - Number(d?.payfastTripOffset || 0));

               const cashMax = effCash >= cashLimit && cashLimit > 0;
               const payMax  = effPay  >= payfastLimit && payfastLimit > 0;

               const bank = d?.banking || {};
               const holder = bank.accountHolder || '';
               const bankName = bank.bankName || '';
               const acc = bank.accountNumber || '';
               const branch = bank.branchCode || '';
          %>
            <tr>
              <td><input type="checkbox" class="sel" value="<%= d._id %>" data-email="<%= d.email %>" data-name="<%= d.name %>"/></td>
              <td><%= d.name %></td>
              <td><%= d.email || '—' %></td>
              <td><%= d.phone || '—' %></td>
              <td><span class="badge"><%= d.status %></span></td>
              <td><%= d.vehicleType || '-' %></td>

              <!-- Trips -->
              <td>
                <div><b><%= trips %></b> total</div>
                <div class="small">ratings: <%= Number(d?.stats?.ratingsCount||0) %></div>
              </td>

              <!-- Cash (total raw count for context) -->
              <td>
                <div><b><%= cashCount %></b> cash</div>
              </td>

              <!-- Limits / Reset (buttons are for UI only; wire if you add endpoints) -->
              <td>
                <div class="limitbox">
                  <div class="limitrow">
                    <span class="badge <%= cashMax ? 'warn' : '' %>">
                      Cash: <b><%= effCash %></b>/<%= cashLimit %>
                    </span>
                    <% if (cashMax) { %>
                      <span class="badge warn">MAX REACHED</span>
                    <% } %>
                  </div>
                  <div class="limitrow">
                    <span class="badge <%= payMax ? 'warn' : '' %>">
                      PayFast: <b><%= effPay %></b>/<%= payfastLimit %>
                    </span>
                    <% if (payMax) { %>
                      <span class="badge warn">MAX REACHED</span>
                    <% } %>
                  </div>
                </div>
              </td>

              <!-- Banking -->
              <td>
                <div class="kvmini">
                  <div class="k">Holder</div><div><%= holder || '—' %></div>
                  <div class="k">Bank</div><div><%= bankName || '—' %></div>
                  <div class="k">Acc</div><div><%= acc || '—' %></div>
                  <div class="k">Branch</div><div><%= branch || '—' %></div>
                </div>
              </td>

              <!-- Referrals -->
              <td>
                <div class="kvmini">
                  <div class="k">Code</div><div><%= code || '—' %></div>
                  <div class="k">Clicks</div><div><%= clicks %></div>
                  <div class="k">Regs</div><div><%= regs %></div>
                  <div class="k">Shared</div><div><%= sharedAt ? sharedAt.toLocaleString() : '—' %></div>
                </div>
              </td>

              <td class="small"><%= joined.toLocaleDateString() %></td>

              <td>
                <a class="btn small" href="/admin/drivers/<%= d._id %>">View</a>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>

      <!-- Pagination -->
      <% if (pagination && pagination.totalPages > 1) { %>
        <div class="pager">
          <% for (let p=1; p<=pagination.totalPages; p++) { %>
            <% if (p === pagination.page) { %>
              <span class="current"><%= p %></span>
            <% } else { %>
              <a href="/admin/drivers?<%=
                'q=' + encodeURIComponent(q||'') +
                '&status=' + encodeURIComponent(status||'') +
                '&page=' + p + '&limit=' + pagination.limit
              %>"><%= p %></a>
            <% } %>
          <% } %>
        </div>
      <% } %>
    </section>
  </main>
</div>

<!-- WhatsApp modal -->
<div class="modal-backdrop" id="wa-backdrop">
  <div class="modal">
    <h3>Send WhatsApp to Drivers</h3>
    <div class="row">
      <label class="small">Scope</label>
      <select id="wa-scope">
        <option value="selected">Selected drivers</option>
        <option value="page">This page</option>
        <option value="search">All (search filter)</option>
      </select>
      <div class="hint">“Selected” uses the checkboxes. “Page” uses current page. “All” uses your search + status filters.</div>
    </div>

    <div class="row">
      <label class="small">Quick templates</label>
      <select id="wa-template">
        <option value="">— choose a template (optional) —</option>
        <option value="docs">📄 Please upload your documents</option>
        <option value="expect">⏰ Expect trips at a specific time</option>
        <option value="goOnline">🟢 Go ONLINE + share live location</option>
      </select>
    </div>

    <div class="row">
      <label class="small">Message</label>
      <textarea id="wa-message" placeholder="Type your WhatsApp message…"></textarea>
      <div class="hint">This sends via your connected Driver WhatsApp bot.</div>
    </div>

    <div class="actions">
      <button class="btn" id="wa-cancel">Cancel</button>
      <button class="btn primary" id="wa-send">Send</button>
    </div>
  </div>
</div>

<!-- Email modal -->
<div class="modal-backdrop" id="email-backdrop">
  <div class="modal">
    <h3>Email Drivers</h3>
    <div class="row">
      <label class="small">Scope</label>
      <select id="email-scope">
        <option value="selected">Selected drivers</option>
        <option value="page">This page</option>
        <option value="search">All (search filter)</option>
      </select>
      <div class="hint">“Selected” uses the checkboxes. “Page” uses current page. “All” uses your search + status filters.</div>
    </div>
    <div class="row">
      <label class="small">Subject</label>
      <input type="text" id="email-subj" placeholder="Subject"/>
    </div>
    <div class="row">
      <label class="small">Message</label>
      <textarea id="email-msg" placeholder="Type your message…"></textarea>
    </div>
    <div class="actions">
      <button class="btn" id="email-cancel">Cancel</button>
      <button class="btn primary" id="email-send">Send</button>
    </div>
  </div>
</div>

<!-- Delete (bulk) modal -->
<div class="modal-backdrop" id="del-backdrop">
  <div class="modal">
    <h3>Delete Selected Drivers</h3>
    <div class="row">
      <div class="hint">This will remove the selected drivers permanently. This cannot be undone.</div>
    </div>
    <div class="actions">
      <button class="btn" id="del-cancel">Cancel</button>
      <button class="btn danger" id="del-confirm">Delete</button>
    </div>
  </div>
</div>

<script>
  const $ = (s, r=document) => r.querySelector(s);
  const $$ = (s, r=document) => Array.from(r.querySelectorAll(s));

  // Select-all
  $('#sel-all')?.addEventListener('change', (e) => {
    $$('.sel').forEach(cb => cb.checked = e.target.checked);
  });
  const collectSelectedIds = () => $$('.sel:checked').map(cb => cb.value).join(',');

  // ===== WhatsApp modal logic =====
  const waBackdrop = $('#wa-backdrop');
  const openWa = () => waBackdrop.style.display = 'flex';
  const closeWa = () => waBackdrop.style.display = 'none';

  $('#btn-bulk-wa')?.addEventListener('click', openWa);
  $('#wa-cancel')?.addEventListener('click', closeWa);
  waBackdrop?.addEventListener('click', (e) => { if (e.target === waBackdrop) closeWa(); });

  const tmpl = $('#wa-template');
  const msg = $('#wa-message');
  tmpl?.addEventListener('change', () => {
    const baseUrl = '<%= publicUrl || "" %>'.replace(/\/$/, '');
    if (tmpl.value === 'docs') {
      msg.value =
`Hi driver 👋

Please upload your documents to get approved and start getting trips.
Open your driver portal here:
${baseUrl}/driver

Tip: after you’re approved, keep WhatsApp *Share live location* ON while ONLINE to receive jobs.`;
    } else if (tmpl.value === 'expect') {
      const now = new Date();
      const hh = String((now.getHours()+1)%24).padStart(2,'0');
      const mm = '00';
      msg.value =
`Heads up ⏰

We expect rider demand around ${hh}:${mm} today.
Please be ONLINE 15 minutes before and keep *Share live location* ON:
📎 → Location → *Share live location* → Until turned off.`;
    } else if (tmpl.value === 'goOnline') {
      msg.value =
`🟢 Please go ONLINE

Reply *1* to this chat to go ONLINE and start receiving jobs.
Then share live location:
📎 → Location → *Share live location* → Until turned off.`;
    }
  });

  $('#wa-send')?.addEventListener('click', async () => {
    const scope = $('#wa-scope').value || 'selected';
    const message = (msg.value || '').trim();
    if (!message) { alert('Type a message'); return; }

    const url = '/admin/drivers/wa';
    const params = new URLSearchParams(location.search);
    const payload = {
      mode: scope,
      message,
      selectedIds: collectSelectedIds(),
      q: $('#q')?.value || '',
      status: $('#status')?.value || '',
      page: (params.get('page') || '1'),
      limit: (params.get('limit') || '20')
    };

    try {
      const r = await fetch(url, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      });
      const data = await r.json();
      if (!data.ok) throw new Error(data.error || 'Failed');
      alert(`WhatsApp sent to ${data.sent} driver(s).${data.failed ? ' Failed: '+data.failed : ''}`);
      closeWa();
    } catch (e) {
      alert('Failed to send WhatsApp: ' + (e?.message || e));
    }
  });

  // ===== Email modal logic =====
  const emailBackdrop = $('#email-backdrop');
  const openEmail = () => emailBackdrop.style.display = 'flex';
  const closeEmail = () => emailBackdrop.style.display = 'none';
  $('#btn-bulk-email')?.addEventListener('click', openEmail);
  $('#email-cancel')?.addEventListener('click', closeEmail);
  emailBackdrop?.addEventListener('click', (e)=>{ if(e.target===emailBackdrop) closeEmail(); });

  $('#email-send')?.addEventListener('click', async ()=> {
    const scope = $('#email-scope').value || 'selected';
    const subject = ($('#email-subj').value || '').trim();
    const message = ($('#email-msg').value || '').trim();
    if (!subject) return alert('Subject required');
    if (!message) return alert('Message required');

    const params = new URLSearchParams(location.search);
    const payload = {
      mode: scope,
      subject,
      message,
      selectedIds: collectSelectedIds(),
      q: $('#q')?.value || '',
      status: $('#status')?.value || '',
      page: (params.get('page') || '1'),
      limit: (params.get('limit') || '20')
    };

    try{
      const r = await fetch('/admin/drivers/email', {
        method:'POST',
        headers:{'Content-Type':'application/json'},
        body: JSON.stringify(payload)
      });
      // server redirects back to /admin/drivers with ok/err
      if (r.redirected) { location.href = r.url; return; }
      alert('Email queued.');
      closeEmail();
    }catch(e){
      alert('Failed to send email: '+(e?.message||e));
    }
  });

  // ===== Delete (bulk) modal logic =====
  const delBackdrop = $('#del-backdrop');
  const openDel = () => delBackdrop.style.display = 'flex';
  const closeDel = () => delBackdrop.style.display = 'none';
  $('#btn-bulk-del')?.addEventListener('click', () => {
    const selected = collectSelectedIds();
    if (!selected) { alert('Select one or more drivers first.'); return; }
    openDel();
  });
  $('#del-cancel')?.addEventListener('click', closeDel);
  delBackdrop?.addEventListener('click', (e)=>{ if(e.target===delBackdrop) closeDel(); });

  $('#del-confirm')?.addEventListener('click', async ()=> {
    const selectedIds = collectSelectedIds();
    if (!selectedIds) return closeDel();
    try{
      const r = await fetch('/admin/drivers/bulk-delete', {
        method:'POST',
        headers:{'Content-Type':'application/json'},
        body: JSON.stringify({ selectedIds })
      });
      if (r.redirected) { location.href = r.url; return; }
      alert('Delete requested.');
      closeDel();
      location.reload();
    }catch(e){
      alert('Delete failed: '+(e?.message||e));
    }
  });
</script>
</body></html>
